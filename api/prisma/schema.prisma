datasource db {
  provider = "sqlite"
  url      = env("DATABASE_URL")
}

generator client {
  provider = "prisma-client-js"
}

model User {
  id        String   @id @default(uuid())
  name      String
  email     String   @unique
  role      UserRole @default(USER)
  tier      UserTier @default(TIER_4)
  createdAt DateTime @default(now())

  loans     Loan[]
  ownedBooks Book[]

  @@index([name])
  @@index([email])
  @@index([role])
}

model Book {
  id          String   @id @default(uuid())
  title       String
  author      String
  publisher   String?
  publishedAt DateTime?
  isbn10      String?  @unique
  isbn13      String?  @unique
  status      BookStatus @default(AVAILABLE)
  comment     String?
  description String?
  thumbnail   String?
  ownerId     String?
  owner       User?    @relation(fields: [ownerId], references: [id])
  createdAt   DateTime  @default(now())

  loans       Loan[]

  @@index([title])
  @@index([author])
  @@index([status])
  @@index([ownerId])
  @@index([title, author])
}

model Loan {
  id         String   @id @default(uuid())
  book       Book     @relation(fields: [bookId], references: [id])
  bookId     String
  borrower   User     @relation(fields: [borrowerId], references: [id])
  borrowerId String
  lentAt     DateTime @default(now())
  dueAt      DateTime
  returnedAt DateTime?

  @@index([bookId])
  @@index([borrowerId])
  @@index([lentAt])
  @@index([dueAt])
  @@index([returnedAt])
  @@index([dueAt, returnedAt])
}

enum BookStatus {
  AVAILABLE
  LENT
  LOST
}

enum UserRole {
  USER
  ADMIN
}

enum UserTier {
  TIER_1  // 3000 yen - can borrow 3 books
  TIER_2  // 1000 yen - can borrow 3 books  
  TIER_3  // 500 yen - can borrow 2 books
  TIER_4  // default - can borrow 1 book
}
